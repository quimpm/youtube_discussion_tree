<entailment-corpus num_edges="75" num_nodes="76"><argument-list><arg author="Computerphile" author_id="UC9-y-6csu5WGm29I7JiwpnA" id="LnX3B9oaKzw" score="12140">Whatsapp always everybody uses whatsapp at some point that's all airline code running behind it there are other examples Twitter's code is built using scala which is a programming language that I think was heavily inspired by Haskell, but integrates very well with Java and but it's also mostly functional and So you know many of the services that we use [everyday] are actually running functional code in the background You've just mentioned then you had a hand in the development of haskell.
So one of the things is that like mathematics Functional programs will satisfy what we call laws for example in mathematics if you see x plus y you can always replace it by y plus x if that's more convenient and in Functional programs then very often you may be able to replace one program by another so you have different ways of expressing the same thing And you can replace one by the other which you may want to do because one of them may be much more efficient than the other and you know that that replacement will not change the overall behavior of your program and So we find that these laws extremely important for reasoning about programs and they can let you Rewrite your program quite freely in order to try and improve its performance for example and be sure that you're not introducing bugs [I'm] assuming that the same kind of Mechanics are happening somewhere at some level on the computers with any other programming language though is a [repeal] for this is it slow is It faster.
Oh, well, so Functional programming languages take care of a lot [of] the implementation details that an older programming languages you have to do manually for example memory management but nowadays It's very popular to use languages like even Java for example which builds memory management into the programming language functional languages do that too Very often there is some kind of performance penalty for this and that has meant that One of the very active parts of functional programming research has been developing compilers that [can] give good performance Despite the fact that you're programming at a higher level nowadays Code written and functional languages can be as fast as or sometimes faster than code written in conventional programming languages one of the very nice benefits of functional program by the way is that it's always safe to evaluate two independent expressions in Parallel and That's because functions have no side effects so you can all the functions going to do is convert inputs to outputs And you can have two of those computations going on at the same time they cannot interfere Whereas if you use Programming languages in which each function may be modifying data somewhere else at the same time then you can't tell whether or not Two functions will interfere they're very likely to and that means that when you want to make programs run in parallel When you want to make them use more than one of the cores in your laptop Then it's much easier to do that if you start with a functional program and that can give a performance benefit over and above What conventional programming languages have I've heard as well?
Can't leak confidential Data and There are people who are working on programming languages that will provide some guarantees about that one of the quite successful approaches is to build a library into haskell in fact that can be used for enforcing in particular Privacy constraints So yes, there's work [going] on in [that] area We're going to talk about things like your quick check And you know that we've already filmed some stuff on that and what do you up to?
So I'm devoting most of my time to quick check nowadays where the basic idea is not to write tests by hand because Because basically it doesn't work Software is so complex that to make sure there are no bugs in it you have to try all kinds of weird Combinations, and there are just too many combinations to try for people to be able to try them all so really the only way to ensure that you Avoid these bugs is to generate tests instead That's what quick check does it lets you write test Code that says what your program [should] do and then it generates as many tests as you want to check that it does And I've been working with quick check for many years now [10] years ago I founded a company that is commercializing quick check And that's been huge fun because it means I get [to] apply this technology to all of real problems all kinds [of] different kinds of software, and that's been a huge learning experience for me and a Tremendous source of Research problems when we find oh, it's hard to apply it in this case well There's a research [property] to solve so [as] a professor and a researcher It's given me all kinds of new ideas for problems to work on which which has been very very stimulating and the value of y at this position is going to be some polynomial that we have to find which is a x cubed plus [be] x squared Plus C.</arg><arg author="Mark Agnew" author_id="UCm1wt3Q7DENiVBbjyz57KIg" id="Ugw4kjVdx-yeXrAURYx4AaABAg" score="0">I Wonder where his English speaking accent comes from because he's Swedish but sounds quite Irish with a bit of a British tone</arg><arg author="Jason Bennett" author_id="UCnlPUFujvNjJP8zBVunuG9w" id="Ugh8N1Ch9gCr-HgCoAEC.8LvV35LH6_P8zRpoVWV2uA" score="0">@muddi900 his dad really was an expert dragon slayer. :(</arg><arg author="Gagan Devagiri" author_id="UCLjwFkn-DogIh6av_CbbLug" id="Ugh8N1Ch9gCr-HgCoAEC.8LvV35LH6_P90CJYNkBdho" score="0">Gold</arg><arg author="Jim Williams" author_id="UCMzJdKKd0WLzQlBBRVECDFw" id="Ugh8N1Ch9gCr-HgCoAEC.8LvV35LH6_P93ySC-1S8a_" score="2">@Amit Dawar a sense of humour?</arg><arg author="Abu Al-Asif" author_id="UCtgJf0My5iyFyUNvdISis-Q" id="Ugh8N1Ch9gCr-HgCoAEC.8LvV35LH6_P9Ic-DnVkmv7" score="0">lol i love that this is the top comment</arg><arg author="Benhard Sim" author_id="UCK5_dlaoiRixbL6SL0BDc5Q" id="Ugh8N1Ch9gCr-HgCoAEC.8LvV35LH6_P9JNpRGU21oB" score="0">big brain jokes</arg><arg author="Julian Gomez" author_id="UCFX9_RGbIK5nlCz3fmt7IUQ" id="UggLFlKMjlFlqXgCoAEC.8LwH6JqDG4p9-gDcFQofFe" score="2">@Matt D Functional Programming for the win!</arg><arg author="&#383;n&#633;&#477;u&#647;&#613; &#623;o&#639;&#592;&#633;&#477;s" author_id="UCQ4HfWfTjwTZNPQAvlw0Eaw" id="UggLFlKMjlFlqXgCoAEC.8LwH6JqDG4p91rA-Dug1mG" score="4">I'm a big fan of C/C++ but when I saw some Rust and Haskell code damn! I felt like I was a little kid with new toys and I wanted to learn them as fast as possible and the guy who helped to understand Haskell programming was so nice that my love for Haskell increased in just minutes.</arg><arg author="Neel Sandell" author_id="UCcUOdA1rUMxQxswL2JxmDTQ" id="UggLFlKMjlFlqXgCoAEC.8LwH6JqDG4p99u1M9PB3Mi" score="0">How can I find such communities? Is it on discord, reddit, some forums, etc? Thank you!</arg><arg author="Dustin Rodriguez" author_id="UC28T2xqlulUioijOzElF0xQ" id="UggLFlKMjlFlqXgCoAEC.8LwH6JqDG4p9A3bJgkX0-O" score="1">@Neel Sandell IRC was where I found them.  They may be on Discord or Slack or something by now, though. #Haskell on Freenode I believe.</arg><arg author="Fyodor Soikin" author_id="UCY_tbtjIwtnR34Ljshtb6vQ" id="UggLFlKMjlFlqXgCoAEC.8LwH6JqDG4p9FhbPglmgq2" score="1">@Neel Sandell try StackOverflow</arg><arg author="Erik Thorsell" author_id="UCVuFuDv0i1Ev5gIEUm2OKdw" id="UgjX91Akno1lTngCoAEC.8LuajHVv4kR8LuiDYJZKxq" score="17">On of the best professors I have had!</arg><arg author="Pixelmaniac" author_id="UCmSYLLpYPgJ9s3VkJygXM4Q" id="UgjX91Akno1lTngCoAEC.8LuajHVv4kR8LuiJU4kyx3" score="17">I was at one of his lectures at my university. Talked about the benefits of functional programming over imperative, as well as the powers of QuickCheck. Kind of like really nice propaganda from the man himself.</arg><arg author="C0deH0wler" author_id="UCIRfnqUh61VyHc7QS1D0i7Q" id="UgjX91Akno1lTngCoAEC.8LuajHVv4kR8LuiVJwlHZQ" score="2">@Pixelmaniac Did you just watch that DNews Plus video...</arg><arg author="Ibakecookiess" author_id="UCrqoG42htmmg5kpi9Mmfueg" id="UgjX91Akno1lTngCoAEC.8LuajHVv4kR8LyLcjUBXAM" score="9">He pretty much did not explain anything? The video had like no analytical content.</arg><arg author="Azufendus Garendum" author_id="UCP0fpMPGYz1RHF4M5wB_83g" id="UgjX91Akno1lTngCoAEC.8LuajHVv4kR9AoI4AhLm3E" score="0">Yes, please</arg><arg author="Merthalophor" author_id="UCN1bsf9L21umKfwryQ9pH7A" id="UghoU1T0knH4l3gCoAEC.8LvGlRm522_96Eha0KLKe2" score="4">@Username lol this is not selling vacuum cleaner 101, this actual problem solving and research. Some things are to complicated to summarize down to 5 minutes.


I can tell you why no examples were given. It's because Functional languages are so utterly, fundamentally different from imperative languages that you'd barely now what you're looking at. If you know Python, you can understand how Java, C++, C#, PhP, Js etc. are different by reading a small summary. But being a CS student who wrote code in all of those languages and just recently started to learn Haskell, let me tell you that you can barely apply anything from those.</arg><arg author="argh523" author_id="UC-Fq0AaOKhoVUVy6vRSM0tg" id="UghoU1T0knH4l3gCoAEC.8LvGlRm522_96vLl54dkIL" score="0">You should look for talks at some big name conferences on youtube.  For introductions to advanced concepts in general, not just FP</arg><arg author="Fnors" author_id="UCEp7mK_gST0f3gH-3wbXqdg" id="UghoU1T0knH4l3gCoAEC.8LvGlRm522_96xpUw3UHoe" score="0">@Username He did explain what makes functional programming different : lack of side effects by design. 
This means: less bug and easy parallelization, among other things. The parallelization element is extremely useful for server stuff where thousands of users can access the same data at the same time. Plus, if the inputs-outputs of two function are identical, you can easily replace one with the other without any chances of bugs.</arg><arg author="Ben Bruland" author_id="UCE2akumkyXCdmV6O9MK_hoA" id="UghoU1T0knH4l3gCoAEC.8LvGlRm522_996BSPXbV9l" score="0">Go write a compiler. You will understand then.</arg><arg author="Nerdalot du Lac" author_id="UCoACZSKfzZcl2fDT1ybaRwA" id="UghoU1T0knH4l3gCoAEC.8LvGlRm522_9JSRIPwitMm" score="0">Well, that&#8217;s kinda our job :P</arg><arg author="J P" author_id="UC4xiL-hFlR1IGo_9sAWCTKw" id="Ugjh71SVfrYNeHgCoAEC.8LuawuVLCSW8SR0W1KUD_t" score="13">That was awesome. It totally showed how he feels about that mutable state. ITS CRAZY, ALL OVER, AND FAST!! Sooooo Awesome!!</arg><arg author="Yoki Lewis" author_id="UCoXzkmvZrfEWJ0eFrJjbqaA" id="Ugjh71SVfrYNeHgCoAEC.8LuawuVLCSW8gGNcNP8VSS" score="7">The camera zoomed out on this</arg><arg author="Stephan M. G." author_id="UCTOx2WDxjmcC0ni2s3g73HQ" id="Ugjh71SVfrYNeHgCoAEC.8LuawuVLCSW8oYD_F0Cht0" score="0">@Ti133700N do one.</arg><arg author="Chase Fury" author_id="UCMLpM5HcdzE_58phUCk2mug" id="Ugjh71SVfrYNeHgCoAEC.8LuawuVLCSW9AWwlPIsH9K" score="0">@XHUNterX Very out of character haha but endearing</arg><arg author="BadWolf" author_id="UCZr1IB4pKbsv6bo4Pqk7Izg" id="Ugjh71SVfrYNeHgCoAEC.8LuawuVLCSW9AogEPHApL6" score="0">haha. gold</arg><arg author="amigalemming" author_id="UCVPpOrWwYMBMXtTeqz71IQA" id="UggIQJZ0OGZGyngCoAEC.8LvsiBpbNAv92UpB3OYtB9" score="6">@Trurl No problem in functional programming: A setter generates a new object, with the addressed member variable modified. A getter does not (should not) alter the object.
The unique selling points of object orientation are sub-typing, inheritance and dynamic binding. No problem in functional programming if equipped with according features of the type system.</arg><arg author="Trurl" author_id="UCR2jxWcetzFGMRr5ZHJpwAA" id="UggIQJZ0OGZGyngCoAEC.8LvsiBpbNAv92UrvwuY1fJ" score="1">@amigalemming But I already addressed this reply in the remark in brackets above. As I said, you lose method encapsulation this way, all functions are global an no longer tied to the class of their objects.</arg><arg author="amigalemming" author_id="UCVPpOrWwYMBMXtTeqz71IQA" id="UggIQJZ0OGZGyngCoAEC.8LvsiBpbNAv92Ut0fKgQR3" score="2">@Trurl I only answered to how objects work in a setting of immutability (= the defining feature of functional programming). I do not see why setter functions also must be global in the domain of immutability. Yes, in Haskell they are. But this is due to Haskell, not due to functional programming.
Simply watch how object oriented functional programming languages work. They exist.</arg><arg author="amigalemming" author_id="UCVPpOrWwYMBMXtTeqz71IQA" id="UggIQJZ0OGZGyngCoAEC.8LvsiBpbNAv92Uuy6xDw0t" score="1">I mean, you could still write car.setSpeed(50) in a functional object oriented programming and it would return a new car object instead of modifying the existing one.</arg><arg author="Trurl" author_id="UCR2jxWcetzFGMRr5ZHJpwAA" id="UggIQJZ0OGZGyngCoAEC.8LvsiBpbNAv92UxO785rqL" score="1">@amigalemming Oh I think I see it now. If all the methods are static ("class methods" instead of "object methods") they keep being tied to "their" class, so you keep method encapsulation. Then it works like this: Car.setSpeed(car, 50) and Car.getSpeed(car), where the uppercase "Car" is not a variable (a constant), but a class. This indeed seems to solve the problem.

The only thing I don't quite understand yet is how Car.getSpeed(car) actually manages to retrieve the speed of the car object. Does it require all the object properties to be public in order to retrieve the property car.speed? This would violate the OOP principle of information hiding. Maybe accessibility could be restricted by allowing properties to be accessed by a static method only if it is from the same class as the class of the object of the property.

But another (non technical) worry just came to my mind: All setters need to _always_ copy the _whole_ object, even if just a minor thing was changed. Since all objects are always immutable in functional programming. This could lead to serious memory/performance disadvantages if you have large objects or if you modify a very large number of them. This begs the question: Why not use ordinary imperative OOP, where you can choose whether a type of object is immutable or not? Then you can avoid performance problems. And it seems to me that the only real difference between ordinary OOP languages and functional OOP languages is just immutability anyways. The former do not force immutability, the latter do. Or is there any other fundamental difference?</arg><arg author="Athaariq Ardiansyah" author_id="UCCMQysEKu5qc2wQmPCtFJkw" id="UggSZnrbeqG7rXgCoAEC.8Luyj0RtmiI9ILB66d6FBa" score="1">I would assume you did graduated, congrats!</arg><arg author="Giteshwar" author_id="UCLf8rM7VvHgo8MWWvcesjMQ" id="Ugh0hzrvGntiOngCoAEC.8LulBBminQX8tjzJ9zCePW" score="1">That woke me up..</arg><arg author="IshayuG" author_id="UCX6weMBnbVPDAC2u4rK82DA" id="Ugh0hzrvGntiOngCoAEC.8LulBBminQX8v9EUgfjGsb" score="6">Having programmed a lot, I can understand his rage. xD
When I first heard of functional programming, I started adopting it as a style in my own programming, even when using conventional languages. I don't adhere to it strictly, but what I do is that I always explicitly pull data up, do the logic entirely using functions that don't modify anything, and then save it in that explicit order, and I never read or save data in parallel, unless I can guarantee that the two streams will not interfere, and in that case I make it explicit.

The amount of time this has saved me is beyond counting. It's a ridiculously smart way of programming.</arg><arg author="Simon Alling" author_id="UCsMh1H0JV3dH-PveaadFgqg" id="Ugh0hzrvGntiOngCoAEC.8LulBBminQX8vaz5x0jZGv" score="4">@IshayuG Exactly. I couldn't agree more. I'll never be saying that everyone should use only purely functional languages, but I would like every single programmer to know what a pure function is and use them where appropriate.</arg><arg author="1armadyl" author_id="UC3Tfw7V67KbIGIgw9Ywj8gg" id="Ugh0hzrvGntiOngCoAEC.8LulBBminQX8xTDYi3YcTe" score="0">Hahha</arg><arg author="William" author_id="UCyjM7-HTcvW0d0WY4GYA3Yw" id="Ugh0hzrvGntiOngCoAEC.8LulBBminQX91nKrX54MQv" score="2">A man who hates side effects</arg><arg author="sirkickassalot123" author_id="UCGOFNab1lbTfj4W3pkotHCA" id="UgxF70TyjHqN9P5d2Md4AaABAg.8qQHnumDxV49MW9IR4YGIe" score="0">he is ... easily one of the best professors I have had.</arg><arg author="amigalemming" author_id="UCVPpOrWwYMBMXtTeqz71IQA" id="Ugy4pByuMCfH2bBideV4AaABAg.8oTXqU37wyn9-qGJqLYjCs" score="1">So far I was not aware that Ericsson was concerned with aviation. :-)</arg><arg author="Jose VIllegas" author_id="UCWBXhCCqPT98ckxvuCbLFwQ" id="UghBlpy8VSupEHgCoAEC.8LvA--ZmxMO8LwFt7WtjbR" score="7">search for a MOOC called something like Programming Paradigms by Prof van Roy of Louvian</arg><arg author="mortelsson" author_id="UC01tv5PGAc3IfixLFdNH_9A" id="UghBlpy8VSupEHgCoAEC.8LvA--ZmxMO8LzeTatG2Vs" score="9">They should do Prolog.</arg><arg author="Aquib A." author_id="UCrtvc-3rej_CDUPgXKUKrFQ" id="UgwB8HfvvXjkoq65UyB4AaABAg.8t1r6Rqw7ho9B0MPZn6ZKi" score="3">Thnx for clarifying.</arg><arg author="jojo300001" author_id="UCBrcX2Prbznhk0BOXFYRHCg" id="UgjzOZx9DfKAUngCoAEC.8Lu_lEEJGLB8LuuMRy01BS" score="3">Side: Facebook is the greatest social filter that's ever existed.</arg><arg author="Piano with Jacob" author_id="UCC97RGP_zlLS3tyJ5PzOovw" id="UgjzOZx9DfKAUngCoAEC.8Lu_lEEJGLB8LuuNcXNrOG" score="3">Personally I haven't had a spam message in years.</arg><arg author="jojo300001" author_id="UCBrcX2Prbznhk0BOXFYRHCg" id="UgjzOZx9DfKAUngCoAEC.8Lu_lEEJGLB8Luuceb7vXA" score="14">Yeah, it's your friends spamming you now.</arg><arg author="Barnesrino Kripperino" author_id="UCQzbDHkdWqkD6oSTkWekcdA" id="UgjzOZx9DfKAUngCoAEC.8Lu_lEEJGLB8Luujxi4ArN" score="3">Ive only seen Facebook spam in Facebook comments on 3rd party websites</arg><arg author="Victor Selve" author_id="UCSmM91w_VuFMSau82CxU8bw" id="UgjzOZx9DfKAUngCoAEC.8Lu_lEEJGLB8gMfHLCIY-Q" score="0">jojo300001 it is spam.

No but in all seriousness I find it absolutely hilarious to see who excepts the friend requests of the just slightly explicit Facebook profiles that I get on a regular basis</arg><arg author="TechyBen" author_id="UC6O-s_NHzCZde98iTPnTtJw" id="UggMgkj_EQc46XgCoAEC.8Luk7ao--7Q8Lurjkx8Sj4" score="8">Most languages do that (spoken and programmed).</arg><arg author="hanelyp1" author_id="UCi1dDK5XJJbCvzjGbJkoz2g" id="UggMgkj_EQc46XgCoAEC.8Luk7ao--7Q8Luvzp70nQj" score="12">You can do functional style programming in most procedural languages.  But it would be on the programmer to avoid side effects.  It's advisable in many cases for subprograms to avoid or restrain side effects even in procedural programming.</arg><arg author="Matthew Mitchell" author_id="UCTm8fv15tW2eiUHT6it1maA" id="UggMgkj_EQc46XgCoAEC.8Luk7ao--7Q8Lux9UhZiTA" score="4">I'll certainly get around to it one day. I don't have the time to learn functional programming at the moment. It's certainly interesting. When I have looked at it before it seemed to be harder to read and comprehend than imperative programming, as imperative programming makes it easy to follow the flow of the program, but a large part of that might be that I'm not used to functional programming. If I learned it, I should find it more intuitive over time.</arg><arg author="Jake Brownson" author_id="UCqy40ZJejR3hma6Q2wxO-fQ" id="UggMgkj_EQc46XgCoAEC.8Luk7ao--7Q8M-7Apwd64U" score="5">You're right, but I highly recommend taking the time to do so. You'll be greatly rewarded even if you don't wind up using Haskell it will give you new abstractions to make your programming in other languages much better.</arg><arg author="Jake Brownson" author_id="UCqy40ZJejR3hma6Q2wxO-fQ" id="UggMgkj_EQc46XgCoAEC.8Luk7ao--7Q8M-7GAK--D_" score="2">going from Java to Haskell is much more difficult than going from Java to C++. It's a different way of thinking not just a new syntax, but it's very much worth the effort.</arg><arg author="Pedro Furlanetto" author_id="UCCSbZYy6O1sxOBZy6Rh6ezw" id="UghSOIIoq6pX2ngCoAEC.8LucFTkLPoZ8LvzhIGcjh3" score="6">nah, lambda calculi</arg><arg author="Kaleb Lucas" author_id="UCiTZ4Cv2ulKhg79mbuJc34g" id="UghoQSqvJ--q4ngCoAEC.8LunbQrWvju8NNEppDCcGj" score="0">What new tools? Names, please...I need hahaha</arg><arg author="Jyrik Gauldurson" author_id="UC-ApEn5n17WYH_b1buIMH1g" id="UghoQSqvJ--q4ngCoAEC.8LunbQrWvju8O-jmE8HDbI" score="1">It can be done very easily. And by making a very small language for teaching purposes will make the interpreter for that language easy to do. In fact, using a tool, you only need to write the grammar of the language in BNF form, generate lexers and parsers and then implement the interpreter in some language like Haskell which is suited for interpreters.</arg><arg author="Anders Jackson" author_id="UCewnWZudermIpksirrQmvDQ" id="UghoQSqvJ--q4ngCoAEC.8LunbQrWvju8O2VPv29jnL" score="1">@Kaleb LaVolpe well, there are lots of them, and some even uses LL(n) instead of LALR(1), like yacc, or LL(1) which you could build using any recursive programming language.

Look at OCaml for some compilers making tools (for parser and grammar tools). 
Or Prolog for the way you could build compilers/grammar there. And there are some tools written in Java to. Just use your Google power.</arg><arg author="Anders Jackson" author_id="UCewnWZudermIpksirrQmvDQ" id="UghoQSqvJ--q4ngCoAEC.8LunbQrWvju8O2VhQYpcCE" score="0">@Jyrik Gauldurson well, you could look at how the interpreter/compiler in Forth are made.  It is a simple language to do that.

And yes, making a calculator with variables are easy, but that isn't a computer language.</arg><arg author="Jyrik Gauldurson" author_id="UC-ApEn5n17WYH_b1buIMH1g" id="UghoQSqvJ--q4ngCoAEC.8LunbQrWvju8O2cl320jq1" score="0">@Anders Jackson I'll check it out. 
And I wasn't talking about a calculator, I can create a language with the same capabilities  as any real world language (in theory). The smallest example would be the doing this for the untyped lambda calculus. But since that wouldn't be very fun, a fragment of a C like language is fine.</arg><arg author="Pedro Furlanetto" author_id="UCCSbZYy6O1sxOBZy6Rh6ezw" id="UghCdYEYt8cFGngCoAEC.8LvudIbgO6l8Lw1tW8i2et" score="2">Hughes ideas too!</arg><arg author="emile" author_id="UCAF8AwvVy3lNzhf6rpV-g_A" id="Ugj1IsWr4tYizngCoAEC.8Lub9djli9n8Luc9fx7G5i" score="2">Bradley Bauer It is quite fun.</arg><arg author="Dustin Rodriguez" author_id="UC28T2xqlulUioijOzElF0xQ" id="Ugj1IsWr4tYizngCoAEC.8Lub9djli9n8LwHUyrDrnP" score="2">If you already know some non-functional programming, be prepared to forget everything you've learned.  Functional programming is fundamentally different.  It's not harder, really, and if you learn it as your first language many people find it easier than imperative programming (what most languages are).  But the more you are used to imperative programming, the weirder functional programming tends to seem.  Being able to think in the ways both require, though, is tremendously beneficial.</arg><arg author="Bradley Bauer" author_id="UCdJt3OUniMUl3CP5b1bySqg" id="Ugj1IsWr4tYizngCoAEC.8Lub9djli9n8Lx95N9pPtd" score="2">@Dustin Rodriguez I like math a lot, will that help?</arg><arg author="Dustin Rodriguez" author_id="UC28T2xqlulUioijOzElF0xQ" id="Ugj1IsWr4tYizngCoAEC.8Lub9djli9n8MDN-LRm5xu" score="2">@Bradley Bauer Absolutely that will help!  Functions in functional programming are much more like mathematical functions than the procedures in imperative languages that get called 'functions'.</arg><arg author="invertedpixel" author_id="UCOv_6MT3axsAqP-mSr-mtZg" id="UgjjEJ8yDdFOOXgCoAEC.8Nw5E5R3SeW8v4XbPSoKMq" score="0">whatever happened to saturday night!!!</arg><arg author="Daniel Beecham" author_id="UCaRyK55QHJ6hgI9VoWfJSeg" id="UgjdPFPVviiY9HgCoAEC.8LucLVaW1SM8LvJHgVd5Zw" score="0">He's still definitely about. He holds guest lectures at the campus every now and then.</arg><arg author="Jyrik Gauldurson" author_id="UC-ApEn5n17WYH_b1buIMH1g" id="UgjdPFPVviiY9HgCoAEC.8LucLVaW1SM8ShaYUmpdvj" score="0">John Hughes teaches Parallel Functional Programming in the Master's level at Chalmers.</arg><arg author="Marco Martinelli" author_id="UCdmCvkinbgnWdPy51WY1dSg" id="Ugg662Arr0neQXgCoAEC.8LvCxcl0tY18LvI0OyzxUW" score="0">Viktor Strate basically its imperative programming but without all of the "under the hood" things. so for example a dictionary implemented using linked lists (data structure) in C, would be tons simpler to do in haskell. hope it helps some</arg><arg author="Marco Martinelli" author_id="UCdmCvkinbgnWdPy51WY1dSg" id="Ugg662Arr0neQXgCoAEC.8LvCxcl0tY18LvIRl9v4kU" score="0">Viktor Strate to say more details, haskell takes care of all the linked lists operations like managing pointers and memory. you just need to tell him what to do with the list. check the book learn haskell for a great good, super easy to learn it with it.</arg><arg author="Marco Martinelli" author_id="UCdmCvkinbgnWdPy51WY1dSg" id="Ugg662Arr0neQXgCoAEC.8LvCxcl0tY18LvIlAkRi3e" score="0">Viktor Strate even more to say its VERY recursive based. if you want i can give you my git with quite a lot of examples of how it works, greetings :)</arg><arg author="Pedro Furlanetto" author_id="UCCSbZYy6O1sxOBZy6Rh6ezw" id="Ugg662Arr0neQXgCoAEC.8LvCxcl0tY18Lw1lU2bBQu" score="1">+Marcos Martinelli answer isn't incorrect but IMHO is not the core of the question. (Marcos, these are implementation details).
+Viktor Strate, the general idea is total functions. Every input produces the same output and always the same output for the same input. Actually, that's exactly what "without all of the under the hood" Marcos pointed to.</arg><arg author="sebastiaan peters" author_id="UC6EZIqkQIRaWZwu9jxlCfLw" id="UghDlw7226aIwHgCoAEC.8LwXJWPXeET8M2I2GDugah" score="0">Why would they? The compiler can in theory generate the same code as something written in C or any other language.</arg><arg author="Pyry Kontio" author_id="UCTAZ5BCuPYI7VlcoQC3-swQ" id="UgiOm6G8GSTV8HgCoAEC.8LuqBWrAwDe8LvGpXbEHCa" score="6">I expect there to be something about monads and burritos in the next video! (And monoids in the category of endofunctors!)</arg><arg author="Vasya Bublikov" author_id="UCbNUVFlHDOBRtVrhr8QUXlw" id="UgiOm6G8GSTV8HgCoAEC.8LuqBWrAwDe8LxhjKcUZT5" score="3">Then this video must not for category theorists. I hope functional programming will share the fate of OOP: in the beginning everyone thought, so I heard, that OOP was super difficult and only geniuses could do it, but nowadays OOP languages like Java and C# are considered not requiring too much technical expertise.</arg><arg author="Paul Serdiuk" author_id="UCb9LN3jq5C8kzj3FFrKDniw" id="UgiOm6G8GSTV8HgCoAEC.8LuqBWrAwDe8LykHcUrVxR" score="2">&#1042;&#1072;&#1089;&#1103; &#1041;&#1091;&#1073;&#1083;&#1080;&#1082;&#1086;&#1074; And now we are moving away from OOP towards even better paradigms. It all depends on the existing availability of tools, the more stuff is already written that enables you to write code in a particular way quicker and easier, the more people will adopt it.</arg><arg author="7177" author_id="UCBhaa1OcES9cLQuowNTTzUg" id="UgxBB4MUplLUfQr-4t14AaABAg.8s_NCX_QYtU9-ImzVRrXkU" score="0">So true lol!</arg></argument-list><argument-pairs><pair id="1"><t id="Ugw4kjVdx-yeXrAURYx4AaABAg" /><h id="LnX3B9oaKzw" /></pair><pair id="2"><t id="Ugh8N1Ch9gCr-HgCoAEC.8LvV35LH6_P8zRpoVWV2uA" /><h id="Ugh8N1Ch9gCr-HgCoAEC" /></pair><pair id="3"><t id="Ugh8N1Ch9gCr-HgCoAEC.8LvV35LH6_P90CJYNkBdho" /><h id="Ugh8N1Ch9gCr-HgCoAEC" /></pair><pair id="4"><t id="Ugh8N1Ch9gCr-HgCoAEC.8LvV35LH6_P93ySC-1S8a_" /><h id="Ugh8N1Ch9gCr-HgCoAEC" /></pair><pair id="5"><t id="Ugh8N1Ch9gCr-HgCoAEC.8LvV35LH6_P9Ic-DnVkmv7" /><h id="Ugh8N1Ch9gCr-HgCoAEC" /></pair><pair id="6"><t id="Ugh8N1Ch9gCr-HgCoAEC.8LvV35LH6_P9JNpRGU21oB" /><h id="Ugh8N1Ch9gCr-HgCoAEC" /></pair><pair id="7"><t id="UggLFlKMjlFlqXgCoAEC.8LwH6JqDG4p9-gDcFQofFe" /><h id="UggLFlKMjlFlqXgCoAEC" /></pair><pair id="8"><t id="UggLFlKMjlFlqXgCoAEC.8LwH6JqDG4p91rA-Dug1mG" /><h id="UggLFlKMjlFlqXgCoAEC" /></pair><pair id="9"><t id="UggLFlKMjlFlqXgCoAEC.8LwH6JqDG4p99u1M9PB3Mi" /><h id="UggLFlKMjlFlqXgCoAEC" /></pair><pair id="10"><t id="UggLFlKMjlFlqXgCoAEC.8LwH6JqDG4p9A3bJgkX0-O" /><h id="UggLFlKMjlFlqXgCoAEC.8LwH6JqDG4p99u1M9PB3Mi" /></pair><pair id="11"><t id="UggLFlKMjlFlqXgCoAEC.8LwH6JqDG4p9FhbPglmgq2" /><h id="UggLFlKMjlFlqXgCoAEC.8LwH6JqDG4p99u1M9PB3Mi" /></pair><pair id="12"><t id="UgjX91Akno1lTngCoAEC.8LuajHVv4kR8LuiDYJZKxq" /><h id="UgjX91Akno1lTngCoAEC" /></pair><pair id="13"><t id="UgjX91Akno1lTngCoAEC.8LuajHVv4kR8LuiJU4kyx3" /><h id="UgjX91Akno1lTngCoAEC" /></pair><pair id="14"><t id="UgjX91Akno1lTngCoAEC.8LuajHVv4kR8LuiVJwlHZQ" /><h id="UgjX91Akno1lTngCoAEC.8LuajHVv4kR8LuiJU4kyx3" /></pair><pair id="15"><t id="UgjX91Akno1lTngCoAEC.8LuajHVv4kR8LyLcjUBXAM" /><h id="UgjX91Akno1lTngCoAEC" /></pair><pair id="16"><t id="UgjX91Akno1lTngCoAEC.8LuajHVv4kR9AoI4AhLm3E" /><h id="UgjX91Akno1lTngCoAEC" /></pair><pair id="17"><t id="UghoU1T0knH4l3gCoAEC.8LvGlRm522_96Eha0KLKe2" /><h id="UghoU1T0knH4l3gCoAEC" /></pair><pair id="18"><t id="UghoU1T0knH4l3gCoAEC.8LvGlRm522_96vLl54dkIL" /><h id="UghoU1T0knH4l3gCoAEC" /></pair><pair id="19"><t id="UghoU1T0knH4l3gCoAEC.8LvGlRm522_96xpUw3UHoe" /><h id="UghoU1T0knH4l3gCoAEC" /></pair><pair id="20"><t id="UghoU1T0knH4l3gCoAEC.8LvGlRm522_996BSPXbV9l" /><h id="UghoU1T0knH4l3gCoAEC" /></pair><pair id="21"><t id="UghoU1T0knH4l3gCoAEC.8LvGlRm522_9JSRIPwitMm" /><h id="UghoU1T0knH4l3gCoAEC" /></pair><pair id="22"><t id="Ugjh71SVfrYNeHgCoAEC.8LuawuVLCSW8SR0W1KUD_t" /><h id="Ugjh71SVfrYNeHgCoAEC" /></pair><pair id="23"><t id="Ugjh71SVfrYNeHgCoAEC.8LuawuVLCSW8gGNcNP8VSS" /><h id="Ugjh71SVfrYNeHgCoAEC" /></pair><pair id="24"><t id="Ugjh71SVfrYNeHgCoAEC.8LuawuVLCSW8oYD_F0Cht0" /><h id="Ugjh71SVfrYNeHgCoAEC" /></pair><pair id="25"><t id="Ugjh71SVfrYNeHgCoAEC.8LuawuVLCSW9AWwlPIsH9K" /><h id="Ugjh71SVfrYNeHgCoAEC" /></pair><pair id="26"><t id="Ugjh71SVfrYNeHgCoAEC.8LuawuVLCSW9AogEPHApL6" /><h id="Ugjh71SVfrYNeHgCoAEC" /></pair><pair id="27"><t id="UggIQJZ0OGZGyngCoAEC.8LvsiBpbNAv92UpB3OYtB9" /><h id="UggIQJZ0OGZGyngCoAEC" /></pair><pair id="28"><t id="UggIQJZ0OGZGyngCoAEC.8LvsiBpbNAv92UrvwuY1fJ" /><h id="UggIQJZ0OGZGyngCoAEC.8LvsiBpbNAv92UpB3OYtB9" /></pair><pair id="29"><t id="UggIQJZ0OGZGyngCoAEC.8LvsiBpbNAv92Ut0fKgQR3" /><h id="UggIQJZ0OGZGyngCoAEC.8LvsiBpbNAv92UrvwuY1fJ" /></pair><pair id="30"><t id="UggIQJZ0OGZGyngCoAEC.8LvsiBpbNAv92Uuy6xDw0t" /><h id="UggIQJZ0OGZGyngCoAEC" /></pair><pair id="31"><t id="UggIQJZ0OGZGyngCoAEC.8LvsiBpbNAv92UxO785rqL" /><h id="UggIQJZ0OGZGyngCoAEC.8LvsiBpbNAv92Uuy6xDw0t" /></pair><pair id="32"><t id="UggSZnrbeqG7rXgCoAEC.8Luyj0RtmiI9ILB66d6FBa" /><h id="UggSZnrbeqG7rXgCoAEC" /></pair><pair id="33"><t id="Ugh0hzrvGntiOngCoAEC.8LulBBminQX8tjzJ9zCePW" /><h id="Ugh0hzrvGntiOngCoAEC" /></pair><pair id="34"><t id="Ugh0hzrvGntiOngCoAEC.8LulBBminQX8v9EUgfjGsb" /><h id="Ugh0hzrvGntiOngCoAEC" /></pair><pair id="35"><t id="Ugh0hzrvGntiOngCoAEC.8LulBBminQX8vaz5x0jZGv" /><h id="Ugh0hzrvGntiOngCoAEC.8LulBBminQX8v9EUgfjGsb" /></pair><pair id="36"><t id="Ugh0hzrvGntiOngCoAEC.8LulBBminQX8xTDYi3YcTe" /><h id="Ugh0hzrvGntiOngCoAEC" /></pair><pair id="37"><t id="Ugh0hzrvGntiOngCoAEC.8LulBBminQX91nKrX54MQv" /><h id="Ugh0hzrvGntiOngCoAEC" /></pair><pair id="38"><t id="UgxF70TyjHqN9P5d2Md4AaABAg.8qQHnumDxV49MW9IR4YGIe" /><h id="UgxF70TyjHqN9P5d2Md4AaABAg" /></pair><pair id="39"><t id="Ugy4pByuMCfH2bBideV4AaABAg.8oTXqU37wyn9-qGJqLYjCs" /><h id="Ugy4pByuMCfH2bBideV4AaABAg" /></pair><pair id="40"><t id="UghBlpy8VSupEHgCoAEC.8LvA--ZmxMO8LwFt7WtjbR" /><h id="UghBlpy8VSupEHgCoAEC" /></pair><pair id="41"><t id="UghBlpy8VSupEHgCoAEC.8LvA--ZmxMO8LzeTatG2Vs" /><h id="UghBlpy8VSupEHgCoAEC" /></pair><pair id="42"><t id="UgwB8HfvvXjkoq65UyB4AaABAg.8t1r6Rqw7ho9B0MPZn6ZKi" /><h id="UgwB8HfvvXjkoq65UyB4AaABAg" /></pair><pair id="43"><t id="UgjzOZx9DfKAUngCoAEC.8Lu_lEEJGLB8LuuMRy01BS" /><h id="UgjzOZx9DfKAUngCoAEC" /></pair><pair id="44"><t id="UgjzOZx9DfKAUngCoAEC.8Lu_lEEJGLB8LuuNcXNrOG" /><h id="UgjzOZx9DfKAUngCoAEC" /></pair><pair id="45"><t id="UgjzOZx9DfKAUngCoAEC.8Lu_lEEJGLB8Luuceb7vXA" /><h id="UgjzOZx9DfKAUngCoAEC" /></pair><pair id="46"><t id="UgjzOZx9DfKAUngCoAEC.8Lu_lEEJGLB8Luujxi4ArN" /><h id="UgjzOZx9DfKAUngCoAEC" /></pair><pair id="47"><t id="UgjzOZx9DfKAUngCoAEC.8Lu_lEEJGLB8gMfHLCIY-Q" /><h id="UgjzOZx9DfKAUngCoAEC" /></pair><pair id="48"><t id="UggMgkj_EQc46XgCoAEC.8Luk7ao--7Q8Lurjkx8Sj4" /><h id="UggMgkj_EQc46XgCoAEC" /></pair><pair id="49"><t id="UggMgkj_EQc46XgCoAEC.8Luk7ao--7Q8Luvzp70nQj" /><h id="UggMgkj_EQc46XgCoAEC" /></pair><pair id="50"><t id="UggMgkj_EQc46XgCoAEC.8Luk7ao--7Q8Lux9UhZiTA" /><h id="UggMgkj_EQc46XgCoAEC" /></pair><pair id="51"><t id="UggMgkj_EQc46XgCoAEC.8Luk7ao--7Q8M-7Apwd64U" /><h id="UggMgkj_EQc46XgCoAEC" /></pair><pair id="52"><t id="UggMgkj_EQc46XgCoAEC.8Luk7ao--7Q8M-7GAK--D_" /><h id="UggMgkj_EQc46XgCoAEC" /></pair><pair id="53"><t id="UghSOIIoq6pX2ngCoAEC.8LucFTkLPoZ8LvzhIGcjh3" /><h id="UghSOIIoq6pX2ngCoAEC" /></pair><pair id="54"><t id="UghoQSqvJ--q4ngCoAEC.8LunbQrWvju8NNEppDCcGj" /><h id="UghoQSqvJ--q4ngCoAEC" /></pair><pair id="55"><t id="UghoQSqvJ--q4ngCoAEC.8LunbQrWvju8O-jmE8HDbI" /><h id="UghoQSqvJ--q4ngCoAEC" /></pair><pair id="56"><t id="UghoQSqvJ--q4ngCoAEC.8LunbQrWvju8O2VPv29jnL" /><h id="UghoQSqvJ--q4ngCoAEC" /></pair><pair id="57"><t id="UghoQSqvJ--q4ngCoAEC.8LunbQrWvju8O2VhQYpcCE" /><h id="UghoQSqvJ--q4ngCoAEC.8LunbQrWvju8O-jmE8HDbI" /></pair><pair id="58"><t id="UghoQSqvJ--q4ngCoAEC.8LunbQrWvju8O2cl320jq1" /><h id="UghoQSqvJ--q4ngCoAEC.8LunbQrWvju8O2VhQYpcCE" /></pair><pair id="59"><t id="UghCdYEYt8cFGngCoAEC.8LvudIbgO6l8Lw1tW8i2et" /><h id="UghCdYEYt8cFGngCoAEC" /></pair><pair id="60"><t id="Ugj1IsWr4tYizngCoAEC.8Lub9djli9n8Luc9fx7G5i" /><h id="Ugj1IsWr4tYizngCoAEC" /></pair><pair id="61"><t id="Ugj1IsWr4tYizngCoAEC.8Lub9djli9n8LwHUyrDrnP" /><h id="Ugj1IsWr4tYizngCoAEC" /></pair><pair id="62"><t id="Ugj1IsWr4tYizngCoAEC.8Lub9djli9n8Lx95N9pPtd" /><h id="Ugj1IsWr4tYizngCoAEC.8Lub9djli9n8LwHUyrDrnP" /></pair><pair id="63"><t id="Ugj1IsWr4tYizngCoAEC.8Lub9djli9n8MDN-LRm5xu" /><h id="Ugj1IsWr4tYizngCoAEC.8Lub9djli9n8Lx95N9pPtd" /></pair><pair id="64"><t id="UgjjEJ8yDdFOOXgCoAEC.8Nw5E5R3SeW8v4XbPSoKMq" /><h id="UgjjEJ8yDdFOOXgCoAEC" /></pair><pair id="65"><t id="UgjdPFPVviiY9HgCoAEC.8LucLVaW1SM8LvJHgVd5Zw" /><h id="UgjdPFPVviiY9HgCoAEC" /></pair><pair id="66"><t id="UgjdPFPVviiY9HgCoAEC.8LucLVaW1SM8ShaYUmpdvj" /><h id="UgjdPFPVviiY9HgCoAEC" /></pair><pair id="67"><t id="Ugg662Arr0neQXgCoAEC.8LvCxcl0tY18LvI0OyzxUW" /><h id="Ugg662Arr0neQXgCoAEC" /></pair><pair id="68"><t id="Ugg662Arr0neQXgCoAEC.8LvCxcl0tY18LvIRl9v4kU" /><h id="Ugg662Arr0neQXgCoAEC" /></pair><pair id="69"><t id="Ugg662Arr0neQXgCoAEC.8LvCxcl0tY18LvIlAkRi3e" /><h id="Ugg662Arr0neQXgCoAEC" /></pair><pair id="70"><t id="Ugg662Arr0neQXgCoAEC.8LvCxcl0tY18Lw1lU2bBQu" /><h id="Ugg662Arr0neQXgCoAEC" /></pair><pair id="71"><t id="UghDlw7226aIwHgCoAEC.8LwXJWPXeET8M2I2GDugah" /><h id="UghDlw7226aIwHgCoAEC" /></pair><pair id="72"><t id="UgiOm6G8GSTV8HgCoAEC.8LuqBWrAwDe8LvGpXbEHCa" /><h id="UgiOm6G8GSTV8HgCoAEC" /></pair><pair id="73"><t id="UgiOm6G8GSTV8HgCoAEC.8LuqBWrAwDe8LxhjKcUZT5" /><h id="UgiOm6G8GSTV8HgCoAEC" /></pair><pair id="74"><t id="UgiOm6G8GSTV8HgCoAEC.8LuqBWrAwDe8LykHcUrVxR" /><h id="UgiOm6G8GSTV8HgCoAEC" /></pair><pair id="75"><t id="UgxBB4MUplLUfQr-4t14AaABAg.8s_NCX_QYtU9-ImzVRrXkU" /><h id="UgxBB4MUplLUfQr-4t14AaABAg" /></pair></argument-pairs></entailment-corpus>